%% Spectral density

tmp =[9.700000000000000000e+01,2.395999999999999866e-02,1.000000000000000000e+01
1.380000000000000000e+02,2.880999999999999880e-02,1.000000000000000000e+01
2.130000000000000000e+02,3.002000000000000154e-02,1.000000000000000000e+01
2.600000000000000000e+02,2.668999999999999845e-02,1.000000000000000000e+01
2.980000000000000000e+02,2.668999999999999845e-02,1.000000000000000000e+01
3.420000000000000000e+02,6.035000000000000087e-02,1.000000000000000000e+01
3.880000000000000000e+02,2.486999999999999975e-02,1.000000000000000000e+01
4.250000000000000000e+02,1.485999999999999995e-02,1.000000000000000000e+01
5.180000000000000000e+02,3.941999999999999671e-02,1.000000000000000000e+01
5.460000000000000000e+02,2.690000000000000117e-03,1.000000000000000000e+01
5.730000000000000000e+02,8.489999999999999283e-03,1.000000000000000000e+01
5.850000000000000000e+02,3.030000000000000141e-03,1.000000000000000000e+01
6.040000000000000000e+02,1.940000000000000101e-03,1.000000000000000000e+01
7.000000000000000000e+02,1.969999999999999963e-03,1.000000000000000000e+01
7.220000000000000000e+02,3.939999999999999926e-03,1.000000000000000000e+01
7.420000000000000000e+02,3.941999999999999671e-02,1.000000000000000000e+01
7.520000000000000000e+02,2.578000000000000083e-02,1.000000000000000000e+01
7.950000000000000000e+02,4.850000000000000144e-03,1.000000000000000000e+01
9.160000000000000000e+02,2.122999999999999887e-02,1.000000000000000000e+01
9.860000000000000000e+02,1.030999999999999972e-02,1.000000000000000000e+01
9.950000000000000000e+02,2.273999999999999980e-02,1.000000000000000000e+01
1.052000000000000000e+03,1.213000000000000016e-02,1.000000000000000000e+01
1.069000000000000000e+03,6.360000000000000202e-03,1.000000000000000000e+01
1.110000000000000000e+03,1.122000000000000081e-02,1.000000000000000000e+01
1.143000000000000000e+03,4.093999999999999723e-02,1.000000000000000000e+01
1.181000000000000000e+03,1.759000000000000147e-02,1.000000000000000000e+01
1.190000000000000000e+03,6.669999999999999714e-03,1.000000000000000000e+01
1.208000000000000000e+03,1.849999999999999908e-02,1.000000000000000000e+01
1.216000000000000000e+03,1.759000000000000147e-02,1.000000000000000000e+01
1.235000000000000000e+03,6.969999999999999633e-03,1.000000000000000000e+01
1.252000000000000000e+03,6.360000000000000202e-03,1.000000000000000000e+01
1.260000000000000000e+03,6.360000000000000202e-03,1.000000000000000000e+01
1.286000000000000000e+03,4.539999999999999765e-03,1.000000000000000000e+01
1.304000000000000000e+03,5.760000000000000363e-03,1.000000000000000000e+01
1.322000000000000000e+03,3.031999999999999973e-02,1.000000000000000000e+01
1.338000000000000000e+03,3.939999999999999926e-03,1.000000000000000000e+01
1.354000000000000000e+03,5.760000000000000363e-03,1.000000000000000000e+01
1.382000000000000000e+03,6.669999999999999714e-03,1.000000000000000000e+01
1.439000000000000000e+03,6.669999999999999714e-03,1.000000000000000000e+01
1.487000000000000000e+03,7.879999999999999852e-03,1.000000000000000000e+01
1.524000000000000000e+03,6.360000000000000202e-03,1.000000000000000000e+01
1.537000000000000000e+03,2.182999999999999871e-02,1.000000000000000000e+01
1.553000000000000000e+03,9.090000000000000857e-03,1.000000000000000000e+01
1.573000000000000000e+03,4.539999999999999765e-03,1.000000000000000000e+01
1.580000000000000000e+03,4.539999999999999765e-03,1.000000000000000000e+01
1.612000000000000000e+03,4.539999999999999765e-03,1.000000000000000000e+01
1.645000000000000000e+03,3.629999999999999980e-03,1.000000000000000000e+01
1.673000000000000000e+03,9.700000000000000505e-04,1.000000000000000000e+01];

om_rng = linspace(0,2000,10000);
Jomega = om_rng*0; %spec den


for j = 1:size(tmp,1)
    Jomega = Jomega + 2*tmp(j,2)*tmp(j,1)^3*om_rng.^2*tmp(j,3)...
            ./((tmp(j,1)^2-om_rng.^2).^2+tmp(j,3).^2*om_rng.^2);
end

%lg is vector of ones and zeros, any 1's will be excluded from the HEOM
if ~exist('lg','var'); lg = zeros(size(tmp,1),1);  end
BOmodes_tmp =[tmp(:,2).*tmp(:,1),tmp(:,3),tmp(:,1),lg];

if ~exist('alternative_reorg','var'); 
reorg_energy = 35;%cm-1
cutoff_freq = 40;%cm-1
else
reorg_energy = alternative_reorg(1);%cm-1
cutoff_freq = alternative_reorg(2);%cm-1    
end
drude_tmp = [reorg_energy,cutoff_freq ];

lam_tot_act = sum(BOmodes_tmp(:,1))+reorg_energy; %total reorg E
lam_tot = 540; %fitted in some different way apparently
lam_tot =  lam_tot_act; %test set to actual


sc_fct = [3,4]; %scaling factor for the additional two states

%GammaL = 201;%cm?1 rate of transfer from state alpha to state beta
%gam_ex = 75;%cm?1  for the upwards rate, where ? = 0.00125cm?1 and n = 60000

%% Hamiltonian
H_sys = [1.526000000000000000e+04 1.500000000000000000e+02 -4.200000000000000000e+01 -5.500000000000000000e+01 -6.000000000000000000e+00 1.700000000000000000e+01 0.000000000000000000e+00 0.000000000000000000e+00
1.500000000000000000e+02 1.519000000000000000e+04 -5.600000000000000000e+01 -3.600000000000000000e+01 2.000000000000000000e+01 -2.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00
-4.200000000000000000e+01 -5.600000000000000000e+01 1.500000000000000000e+04 7.000000000000000000e+00 4.600000000000000000e+01 -4.000000000000000000e+00 7.000000000000000000e+01 0.000000000000000000e+00
-5.500000000000000000e+01 -3.600000000000000000e+01 7.000000000000000000e+00 1.510000000000000000e+04 -5.000000000000000000e+00 3.700000000000000000e+01 0.000000000000000000e+00 0.000000000000000000e+00
-6.000000000000000000e+00 2.000000000000000000e+01 4.600000000000000000e+01 -5.000000000000000000e+00 1.503000000000000000e+04 -3.000000000000000000e+00 7.000000000000000000e+01 0.000000000000000000e+00
1.700000000000000000e+01 -2.000000000000000000e+00 -4.000000000000000000e+00 3.700000000000000000e+01 -3.000000000000000000e+00 1.502000000000000000e+04 0.000000000000000000e+00 0.000000000000000000e+00
0.000000000000000000e+00 0.000000000000000000e+00 7.000000000000000000e+01 0.000000000000000000e+00 7.000000000000000000e+01 0.000000000000000000e+00 1.599200000000000000e+04 4.000000000000000000e+01
0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 4.000000000000000000e+01 1.613200000000000000e+04];

%actual site energies
H_minus_reorg = H_sys - blkdiag(eye(6),sc_fct(1),sc_fct(2))*lam_tot ;

H_1 = H_sys(1:6,1:6); %relevant subsystem
H_2 = H_sys(7:8,7:8); %charge transfer bit
H_12 = H_sys(1:7,1:7); %For gen Forster rate transfer

N = length(H_1);
N2 = length(H_2);
%% Include selected modes
BO_modes = {};  Drude_modes = {};
if ~exist('lg2','var'); lg2 = true(size(tmp,1),1);  end%change to exclude some modes
for j = 1:length(H_1)
    BO_modes{j} = BOmodes_tmp(lg2,:);
    Drude_modes{j} = drude_tmp;
end

%now extended versions which also include the extra sites with scaled
%couplings 
Drude_modes_ex = Drude_modes; BO_modes_ex = BO_modes; 
for j = 1:length(sc_fct)
Drude_modes_ex{length(H_1)+j} = [drude_tmp(:,1)*sc_fct(j),drude_tmp(:,2)]; 
BO_modes_ex{length(H_1)+j}  = [BOmodes_tmp(:,1)*sc_fct(j),BOmodes_tmp(:,2:end)];
end
%%  Derive HEOM to various orders

if ~exist('Kappa','var'); Kappa = 3;  end
if ~exist('max_tier','var')
max_tier = 1; %anything larger than 1 will kill this for the full spec
end
if ~exist('kap1','var')
kap1 = inf; %anything larger than 1 will kill this for the full spec
end

clear cc vv cc2 cc_com cc_acom

    for j = 1:N
        if ~isempty(BO_modes{j}) %check if underdamped modes present
        %include modes with last entry = 0
    to_inc = BO_modes{j}(:,4)==0;
    om_0 =   BO_modes{j}(to_inc,3); %#ok<*USENS>
    gam  =   BO_modes{j}(to_inc,2);
    lambda = BO_modes{j}(to_inc,1);
        else
lambda = []; gam = []; om_0 = [];   %assume all empty
        end
if size(Drude_modes{j},2)==1 %this allows the passing of just a pure dephasing term
    gam_dru = []; lam_dru =[];
    QQ_extra = [Drude_modes{j}(1),Drude_modes{j}(2)]; 
    %note passing a second argument will include dissipation 
else
    gam_dru = Drude_modes{j}(:,1); lam_dru=  Drude_modes{j}(:,2);
    QQ_extra = [0,0];
end    
    
    [cc1,cc2R,cc2I,vv1,vv2,QQ,cc_tmp] = coeffients_from_brownian_new...
   (lambda,gam,om_0,Temperature_in_Kelvin,Kappa,gam_dru,lam_dru); 
    if ~isempty(cc_tmp)
     cc_com{j}= [cc2R,cc1]; vv{j} = [vv2,vv1]; cc(j,:)=cc_tmp; %#ok<*AGROW>
     cc_acom{j}= [cc2I,cc1*0]; else
     cc_com{j}= []; vv{j} = [];cc_acom{j}= [];
    end
    QQ_topass(j,:) = [QQ,0]+QQ_extra;
    end
[coup_com_save,coup_acom_save,const_factor,nn]=...
    multi_site_drude_and_brownian_HOM_4(cc_com,cc_acom,vv,kap1,max_tier);
